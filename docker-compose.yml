version: '3.3'

networks:
  polls_app_network:

services:
  polls_app_postgres:
    image: postgres:14
    container_name: polls_app_postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DATABASE_NAME=app_db
      - DATABASE_USER=app_user
      - DATABASE_PASSWORD=app_user_pass_123
    ports: 
      - '5438:5432'
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U postgres"]
      interval: 5s
      timeout: 15s
      retries: 20
    volumes:
      - ./polls_app_postgres_db_data:/var/lib/postgresql/data
      - ./database/postgres_database/setup_scripts/01-init.sh:/docker-entrypoint-initdb.d/01-init.sh
    networks:
      - polls_app_network
  
  # polls_app_mysql:
  #   build:
  #     context: ./database/mysql_database
  #     dockerfile: Dockerfile
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=root_pass_123
  #     - MYSQL_DATABASE=app_db
  #     - MYSQL_USER=app_user
  #     - MYSQL_PASSWORD=app_user_pass_123
  #   ports: 
  #     - '3306:3306'
  #   volumes:
  #     - ./polls_app_mysql_db_data:/var/mysql      
  #   networks:
  #     - polls_app_network
    
  # polls_phpadmin:
  #   image: phpmyadmin/pypmyadmin
  #   container_name: polls_phpadmin
  #   environment:
  #     PMA_HOST: polls_app_mysql
  #     PMA_PORT: 3306
  #   ports:
  #     - "8088:80"
  #   networks:
  #     - polls_app_network


  # polls_redis_server:
  #   image: "redis-alpine"
  #   command: redis-server
  #   ports:
  #     - "6383:6379"
  #   networks:
  #     - polls_app_network

volumes:
  polls_app_postgres:
    driver: local
  # polls_app_mysql:
  #   driver: local
